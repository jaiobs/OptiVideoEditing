// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`VideoPickerTest should render the TimerModalComponent 1`] = `
<Modal
  animationType="none"
  deviceHeight={null}
  deviceWidth={null}
  hardwareAccelerated={false}
  hideModalContentWhileAnimating={false}
  onBackdropPress={[Function]}
  onModalHide={[Function]}
  onModalWillHide={[Function]}
  onModalWillShow={[Function]}
  onRequestClose={[Function]}
  scrollHorizontal={false}
  scrollOffset={0}
  scrollOffsetMax={0}
  scrollTo={null}
  supportedOrientations={
    Array [
      "portrait",
      "landscape",
    ]
  }
  swipeThreshold={100}
  transparent={true}
  visible={false}
>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "backgroundColor": "transparent",
        "bottom": 0,
        "height": 1334,
        "left": 0,
        "opacity": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
        "width": 750,
      }
    }
  />
  <View
    deviceHeight={null}
    deviceWidth={null}
    hideModalContentWhileAnimating={false}
    onBackdropPress={[Function]}
    onModalHide={[Function]}
    onModalWillHide={[Function]}
    onModalWillShow={[Function]}
    onRequestClose={[Function]}
    pointerEvents="box-none"
    scrollHorizontal={false}
    scrollOffset={0}
    scrollOffsetMax={0}
    scrollTo={null}
    style={
      Object {
        "flex": 1,
        "justifyContent": "flex-end",
        "margin": 0,
        "transform": Array [
          Object {
            "translateY": 0,
          },
        ],
      }
    }
    supportedOrientations={
      Array [
        "portrait",
        "landscape",
      ]
    }
    swipeThreshold={100}
  >
    <View
      style={
        Object {
          "alignSelf": "center",
          "backgroundColor": "rgba(0, 0, 0, 0.92)",
          "borderTopLeftRadius": 30,
          "borderTopRightRadius": 30,
          "height": 250,
          "width": "100%",
        }
      }
    >
      <Text
        style={
          Object {
            "alignSelf": "center",
            "color": "#fff",
            "fontSize": 14,
            "marginTop": 15,
          }
        }
      >
        Set timer
      </Text>
      <View
        style={
          Object {
            "flex": 1,
            "flexDirection": "row",
            "marginTop": 10,
            "maxHeight": 40,
          }
        }
      >
        <View
          style={
            Object {
              "alignSelf": "flex-start",
              "flex": 1,
              "width": "30%",
            }
          }
        >
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <Text
              style={
                Object {
                  "alignSelf": "center",
                  "color": "#fff",
                  "fontSize": 14,
                  "marginTop": 4,
                }
              }
            >
              Photo
            </Text>
          </View>
          <View
            style={
              Object {
                "alignSelf": "center",
                "backgroundColor": "#f9089b",
                "height": 6,
                "top": 2,
                "width": 100,
              }
            }
          />
        </View>
        <View
          style={
            Object {
              "alignSelf": "flex-start",
              "flex": 1,
              "width": "30%",
            }
          }
        >
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <Text
              style={
                Object {
                  "alignSelf": "center",
                  "color": "#fff",
                  "fontSize": 14,
                  "marginTop": 4,
                }
              }
            >
              Video
            </Text>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "flex": 1,
            "marginTop": 20,
          }
        }
      >
        <Text
          style={
            Object {
              "alignSelf": "center",
              "color": "#fff",
              "fontSize": 20,
            }
          }
        >
          5
           
          <Text
            style={
              Object {
                "color": "#fff",
                "fontSize": 14,
                "marginLeft": 5,
              }
            }
          >
            Seconds
          </Text>
        </Text>
        <View
          style={
            Array [
              Object {
                "alignSelf": "center",
                "flex": 1,
                "flexDirection": "row",
              },
              Object {
                "marginTop": 20,
              },
            ]
          }
        >
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#f9089b",
                "borderRadius": 20,
                "height": 35,
                "justifyContent": "center",
                "marginLeft": 40,
                "opacity": 1,
                "width": 80,
              }
            }
          >
            <Text
              style={
                Object {
                  "color": "white",
                  "fontSize": 14,
                }
              }
            >
              Start
            </Text>
          </View>
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#f9089b",
                "borderRadius": 20,
                "height": 35,
                "justifyContent": "center",
                "marginLeft": 40,
                "opacity": 1,
                "width": 80,
              }
            }
          >
            <Text
              style={
                Object {
                  "color": "white",
                  "fontSize": 14,
                }
              }
            >
              Exit
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</Modal>
`;
